name: Build

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build '${{matrix.family}}'"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { file: "Twemoji_Glyf.ttf", family: "Twemoji - Glyf", color: glyf }
          - {
              file: "Twemoji_GlyfColr0.ttf",
              family: "Twemoji - GlyfColr0",
              color: glyf_colr_0,
            }
          - {
              file: "Twemoji_GlyfColr1.ttf",
              family: "Twemoji - GlyfColr1",
              color: glyf_colr_1,
            }
          - {
              file: "Twemoji_CffColr0.otf",
              family: "Twemoji - CffColr0",
              color: cff_colr_0,
            }
          - {
              file: "Twemoji_CffColr1.otf",
              family: "Twemoji - CffColr1",
              color: cff_colr_1,
            }
          - {
              file: "Twemoji_Cff2Colr0.otf",
              family: "Twemoji - Cff2Colr0",
              color: cff2_colr_0,
            }
          - {
              file: "Twemoji_Cff2Colr1.otf",
              family: "Twemoji - Cff2Colr1",
              color: cff2_colr_1,
            }
          - {
              file: "Twemoji_Picosvg.ttf",
              family: "Twemoji - Picosvg",
              color: picosvg,
            }
          - {
              file: "Twemoji_Picosvgz.ttf",
              family: "Twemoji - Picosvgz",
              color: picosvgz,
            }
          - {
              file: "Twemoji_Untouchedsvg.ttf",
              family: "Twemoji - Untouchedsvg",
              color: untouchedsvg,
            }
          - {
              file: "Twemoji_Untouchedsvgz.ttf",
              family: "Twemoji - Untouchedsvgz",
              color: untouchedsvgz,
            }
          - { file: "Twemoji_Cbdt.ttf", family: "Twemoji - Cbdt", color: cbdt }
          - { file: "Twemoji_Sbix.ttf", family: "Twemoji - Sbix", color: sbix }

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5

      - name: Build Font
        run: uv run generate.py -o "${{matrix.file}}" --family "${{matrix.family}}" ${{matrix.color}}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.file}}
          path: "build/${{matrix.file}}"

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && (contains(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'))
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # tags

      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - run: ls -la artifacts

      - name: Check Release
        id: is-rel
        run: |
          set +e;
          git describe --exact-match --match 'v*' &> /dev/null;
          echo "IS_TAGGED=$?" >> "$GITHUB_OUTPUT";
        shell: bash

      - name: Hash Files
        run: |
          echo "<details><summary>Hashes</summary>" >> body.txt
          echo "" >> body.txt
          echo "| File | Hash |" >> body.txt
          echo "|---|---|" >> body.txt
          for file in $(find artifacts); 
          do 
            if [ ! -d "$file" ]; then
              echo "| $(basename -- "$file") | $(sha256sum "$file" | cut -d " " -f 1) |" >> body.txt;
            fi;
          done
          echo "</details>" >> body.txt
        shell: bash

      - name: Regular release
        uses: ncipollo/release-action@v1
        if: steps.is-rel.outputs.IS_TAGGED == '0'
        with:
          artifacts: "artifacts/**/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: false
          allowUpdates: true
          draft: true
          bodyFile: body.txt
          prerelease: false

      - name: Nightly release
        uses: ncipollo/release-action@v1
        if: steps.is-rel.outputs.IS_TAGGED != '0'
        with:
          artifacts: "artifacts/**/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: false
          replacesArtifacts: true
          allowUpdates: true
          bodyFile: body.txt
          prerelease: true
          name: Nightly Release
          tag: nightly-build

      - name: Update nightly-build tag
        if: steps.is-rel.outputs.IS_TAGGED != '0'
        run: |
          git tag -f nightly-build
          git push -f origin nightly-build
